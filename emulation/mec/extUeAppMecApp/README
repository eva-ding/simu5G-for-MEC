In this example the network consists of one UE connected to one gNB, one UPF, 
one NAT router and a MEC system composed of a MEC host. 
Both the UE app and the MEC app run outside the simulator. 
The former injects (and receives) packets through the ExtLowerEthernetInterface module of the UE.
The external MEC app, instead, communicates with the simulator via the ExtLowerEthernetInterface module
of the virtualisation infrastructure of the MEC host, as if it were actually deployed on the MEC host.

IP addresses and routing tables are set up by using mrt files (see "routing" folder).

*** NOTE ***
In order to run an emulation where both the endpoints of a connection are real applications,
the UE application (e.g. on the UE) needs to use the IP address of the NAT router within the
simulation as destination address. Such NAT router element will perform Network Address 
Translation (NAT), according to the rules specified with the corresponding parameter in the 
INI file. 
For example, if the client IP address is 192.168.3.2, while the MEC app 
IP address is 192.168.2.2, the NAT rules on the simulated NAT router are set as:
   
    *.router.ipv4.natTable.config = xml("<config> \
                                            <entry type='prerouting' \
                                            packetDataFilter='*Ipv4Header and destAddress=~10.0.2.1' \
                                            srcAddress='192.168.2.1' destAddress='192.168.2.2'/> \
                                            <entry type='prerouting' \
                                            packetDataFilter='*Ipv4Header and destAddress=~192.168.2.1' \
                                            srcAddress='10.0.2.1' destAddress='192.168.3.2'/> \
                                         </config>")
 
=== HOW TO BUILD AND RUN ===

1) Make sure that the emulation feature is enabled in the INET project:

- via the IDE: right-click on the 'inet' folder in the Project Explorer -> Properties;
               select OMNeT++ -> Project Features; 
               tick the box "Network emulation support".
- via the command line: in the root INET folder, type 'opp_featuretool enable NetworkEmulationSupport'.

  If the feature was disabled, recompile INET with the command 'make' (in the root INET folder).  


2) In order to be able to send/receive packets through sockets, set the application permissions: 

    sudo setcap cap_net_raw,cap_net_admin=eip path/to/opp_run
    sudo setcap cap_net_raw,cap_net_admin=eip path/to/opp_run_dbg
    sudo setcap cap_net_raw,cap_net_admin=eip path/to/opp_run_release


3) Compile Simu5G from the command line by running (in the root Simu5G folder):
    $ . setenv
	$ make makefiles
	$ make 
	 	
	 	
4) Run the simulation by launching either ./run_wSocket.sh

============================
