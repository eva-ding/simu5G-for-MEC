[General]
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true
result-dir = 3car

##########################################################
#            Output Format Results                       #
##########################################################
num-rngs = 3
repeat = 1
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
#**.sctp.**.scalar-recording = false
#**.sctp.**.vector-recording = false
#**.scalar-recording = true
#**.vector-recording = false
#**.routingRecorder.enabled = false


**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.eNodeB*.**.scalar-recording = true
**.eNodeB*.**.vector-recording = false

**.cellularNic.**.scalar-recording = true
**.cellularNic.**.vector-recording = false

**.pgw.**.scalar-recording = true
**.pgw.**.vector-recording = false


**.scalar-recording = false
**.vector-recording = true



##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = true

sim-time-limit = 40s

*.playgroundSizeX = 1100m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 50m


############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands = ${numBands=25}

*.*.cellularNic.LteChannelModelType = "NRChannelModel"
*.gNodeB1.cellularNic.numCarriers = 1
*.gNodeB1.cellularNic.channelModel[0].componentCarrierIndex = 0
*.car[*].cellularNic.numCarriers = 1
*.car[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      Mobility                          #			
##########################################################		
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

*.car[*].mobility.initFromDisplayString = false
*.car[*].mobilityType = "LinearMobility"
*.car[*].mobility.updateInterval = 0.05s

*.gNodeB1.mobility.initFromDisplayString = true

**.numCars = 1
**.car[0].mobility.initialX = 180m
**.car[0].mobility.initialY = 50m
**.car[0].mobility.initialMovementHeading = 90deg
**.car[0].mobility.speed = 10mps

**.car[1].mobility.initialX = 180m
**.car[1].mobility.initialY = 100m
**.car[1].mobility.initialMovementHeading = 90deg
**.car[1].mobility.speed = 10mps

**.car[2].mobility.initialX = 180m
**.car[2].mobility.initialY = 150m
**.car[2].mobility.initialMovementHeading = 90deg
**.car[2].mobility.speed = 10mps

**.car[*].masterId = 1    
**.car[*].macCellId = 1   
**.car[*].nrMasterId = 1
**.car[*].nrMacCellId = 1
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)

**.hasRNISupport = true
##########################################################
#                    App Layer                           #
##########################################################

#########################_Car Side_#######################

#------------UEWarningAlertApp---------------
*.car[*].numApps = 2
*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/WarningAlertApp.json"

*.car[*].app[1].typename = "UEWarningAlertApp"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].startTime = 1s										#when sending start warning alert app									#period to sending messages
*.car[*].app[1].stopTime = 30s										#when sending stop MEC warning alert app



#*.car[*].app[0].requiredRam = 10MB
#*.car[*].app[0].requiredDisk = 10MB
#*.car[*].app[0].requiredCpu = 0.01
#----------------------------------------

######################_ME Hosts Side_#####################
# available resources 
*.mecHost1.maxMECApps = 100					# max ME Apps to instantiate
*.mecHost1.maxRam = 32GB						# max KBytes of Ram 
*.mecHost1.maxDisk = 100TB					# max KBytes of Disk Space 
*.mecHost1.maxCpuSpeed = 400000		    	# max CPU

*.mecHost2.maxMECApps = 100					# max ME Apps to instantiate
*.mecHost2.maxRam = 32GB						# max KBytes of Ram 
*.mecHost2.maxDisk = 100TB					# max KBytes of Disk Space 
*.mecHost2.maxCpuSpeed = 500					# max CPU

#----------------------------------------

*.mecHost*.eNBList = "gNodeB1"				# gNBs associated to the MEC Hosts

#-------REST Services:---------------

# MEC host 1 services configurations
*.mecHost1.mecPlatform.numMecServices = 1
*.mecHost1.mecPlatform.mecService[0].typename = "RNIService"
*.mecHost1.mecPlatform.mecService[0].localAddress = "mecHost1.mecPlatform" #da cambiare!!
*.mecHost1.mecPlatform.mecService[0].localPort = 10020

*.mecHost1.mecPlatform.serviceRegistry.localAddress = "mecHost1.mecPlatform" #da cambiare!!
*.mecHost1.mecPlatform.serviceRegistry.localPort = 10021

# MEC host 2 services configurations

*.mecHost2.mecPlatform.numMecServices = 1
*.mecHost2.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost2.mecPlatform.mecService[0].localAddress = "mecHost2.mecPlatform" #da cambiare!!
*.mecHost2.mecPlatform.mecService[0].localPort = 10020

*.mecHost2.mecPlatform.serviceRegistry.localAddress = "mecHost2.mecPlatform" #da cambiare!!
*.mecHost2.mecPlatform.serviceRegistry.localPort = 10021

#--------------------------------------------

# random number generation
*.mecHost2.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.mecHost2.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
*.mecHost2.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.mecHost2.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.mecHost2.mecPlatform.mecService[0].requestServiceTime = 20us
*.mecHost2.mecPlatform.mecService[0].subscriptionServiceTime = 11us

# ----------------------------------------------------------------------------- #
# Config "Test"
#
[Config Test]
network = simu5g.simulations.NR.mec.multiMecHost.MecTwoMecHosts

**.mecOrchestrator.mecHostList = "mecHost1, mecHost2"      # MEC hosts associated to the MEC system
**.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator" # the MECPM needs to know the MEC orchestrator
**.mecOrchestrator.mecApplicationPackageList = "WarningAlertApp"  # List of MEC app descriptors to be onboarded at 
**.mecHost*.virtualisationInfrastructure.ipv4.forwarding = true

